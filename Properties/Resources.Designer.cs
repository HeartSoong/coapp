//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CoApp.CLI.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("CoApp.CLI.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use --help for command line help..
        /// </summary>
        internal static string ForCommandLineHelp {
            get {
                return ResourceManager.GetString("ForCommandLineHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Usage:
        ///-------
        ///
        ///CoApp-cli [options] &lt;command&gt; &lt;parameters&gt;
        ///
        ///Options:
        ///--------
        ///    --help                  this help
        ///    --nologo                don&apos;t display the logo
        ///    --load-config=&lt;file&gt;    loads configuration from &lt;file&gt;
        ///    --verbose               prints verbose messages
        ///
        ///    --pretend               doesn&apos;t actually alter the system
        ///
        ///	--as-specified[=&lt;pkg&gt;]	Install the specific package(s) specified 
        ///							even if a newer version is available. 
        ///
        ///	--upgrade[=&lt;pkg&gt;]		Accept any newer v [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string HelpText {
            get {
                return ResourceManager.GetString("HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Command &apos;install&apos; requires at least one package..
        /// </summary>
        internal static string InstallRequiresPackageName {
            get {
                return ResourceManager.GetString("InstallRequiresPackageName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The given file is not a valid package [{0}].
        /// </summary>
        internal static string InvalidPackage {
            get {
                return ResourceManager.GetString("InvalidPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing Command..
        /// </summary>
        internal static string MissingCommand {
            get {
                return ResourceManager.GetString("MissingCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Command &apos;list&apos; requires a parameter: either &apos;packages&apos; or &apos;repo&apos;..
        /// </summary>
        internal static string MissingParameterForList {
            get {
                return ResourceManager.GetString("MissingParameterForList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Option {0} requires a location..
        /// </summary>
        internal static string OptionRequiresLocation {
            get {
                return ResourceManager.GetString("OptionRequiresLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package Not Found: {0}.
        /// </summary>
        internal static string PackageNotFound {
            get {
                return ResourceManager.GetString("PackageNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to hello.
        /// </summary>
        internal static string text1 {
            get {
                return ResourceManager.GetString("text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GarrettSerack.
        /// </summary>
        internal static string text2 {
            get {
                return ResourceManager.GetString("text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Command &apos;uninstall&apos; requires at least one package..
        /// </summary>
        internal static string UninstallRequiresPackageName {
            get {
                return ResourceManager.GetString("UninstallRequiresPackageName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown Command [{0}].
        /// </summary>
        internal static string UnknownCommand {
            get {
                return ResourceManager.GetString("UnknownCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown parameter [--{0}].
        /// </summary>
        internal static string UnknownParameter {
            get {
                return ResourceManager.GetString("UnknownParameter", resourceCulture);
            }
        }
    }
}
