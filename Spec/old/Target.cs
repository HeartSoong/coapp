//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// <generator>
// CoApp Project PSCodeGenerator Version 1.0.3.1241 for x64
//Copyright (c) Garrett Serack, CoApp Contributors 2010-2011. All rights reserved
//CoApp PropertySheet c# code generator
//-------------------------------------------------------------------------------
// </generator>
namespace CoApp.Toolkit.Spec {
    using CoApp.Toolkit;
    using CoApp.Toolkit.Exceptions;
    using CoApp.Toolkit.Extensions;
    using CoApp.Toolkit.Scripting.Languages.PropertySheet;
    using System.IO;
    using System;
    using System.ComponentModel;
    using System.Collections.Generic;
    
    
    public enum ProcessCompileAs {
        
        [Description("none")]
        none,
        
        [Description("c")]
        c,
        
        [Description("c++")]
        cplusplus,
        
        [Description("resource")]
        resource,
    }
    
    [Description("process")]
    public partial class Process {
        
        public ProcessCompileAs CompileAs;
        
        public bool ReadOnlyStringPooling;
        
        public readonly Dictionary<string,string> Define = new Dictionary<string,string>();
        
        public readonly List<string> IncludeDirectory = new List<string>();
    }
    
    public enum EventCondition {
        
        [Description("pre-build")]
        preBuild,
        
        [Description("post-build")]
        postBuild,
        
        [Description("failure")]
        failure,
    }
    
    [Description("event")]
    public partial class Event {
        
        public EventCondition Condition;
        
        public int Priority;
        
        public string Script;
    }
    
    [Description("dependencies")]
    public partial class Dependencies {
        
        public readonly List<string> Libraries = new List<string>();
    }
    
    public enum LinkSubsystem {
        
        [Description("console")]
        console,
        
        [Description("windows")]
        windows,
    }
    
    public enum LinkType {
        
        [Description("exe")]
        exe,
        
        [Description("dll")]
        dll,
        
        [Description("lib")]
        lib,
    }
    
    [Description("link")]
    public partial class Link {
        
        public string Output;
        
        public LinkSubsystem Subsystem;
        
        public LinkType Type;
    }
    
    [Description("library")]
    public partial class Library {
        
        public string File;
        
        public string Version;
    }
    
    [Description("file-group")]
    public partial class FileGroup {
        
        public readonly Dictionary<string,string> Files = new Dictionary<string,string>();
    }
    
    [Description("Target")]
    public partial class Target {
        
        public readonly Dictionary<string,Process> Process = new Dictionary<string,Process>();
        
        public readonly Dictionary<string,Event> Event = new Dictionary<string,Event>();
        
        public readonly Dependencies Dependencies = new Dependencies();
        
        public readonly Link Link = new Link();
        
        public readonly Dictionary<string,Library> Library = new Dictionary<string,Library>();
        
        public readonly Dictionary<string,FileGroup> FileGroup = new Dictionary<string,FileGroup>();
    }
}