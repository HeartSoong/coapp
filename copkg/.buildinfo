#product-info {
    product-name: "coapp toolkit";
    version: "1.1";
    original-source-location: "git@github.com:coapp/coapp.git";
    original-source-website: "https://github.com/coapp/coapp";
    license: "Apache2.0";
    packager: "garrett serack <garretts@microsoft.com>";
}

release { 
    // builds the binaries in "Release" mode but does not sign them.
    set : cfg = "Release";
    uses : {
        x86, x64, anycpu 
    };
    
    build-command: @"echo build done.";
}

debug {
    // builds binaries in debug mode
    default: false;
    set : cfg = "Debug";
    uses : {
        x86, x64, anycpu 
    };
    
    build-command: @"echo build done.";
}


sign { 
    // builds all the binaries in "Release" mode and digitally signs and 
    // strong-names the binaries.
    // 
    default: false;
    set : cfg = "Release";
    uses : { 
        sign-prerequisites,
        sign-binaries
    };
        
    
    build-command: @"echo built singed binaries. done.";
}



sign-prerequisites {
    set : release_dir = @"output\any\Release\bin\";
    set : binaries_dir = @"ext\binaries\";
    default: false;
    
    uses: {
        x86,
        x64,
    };
    
    targets: {
    };
    
    build-command: @" 
        REM sign files in release directory
        ext\tools\simplesigner --nologo ""${release_dir}managed-bootstrap.exe"" || goto failed
        ext\tools\simplesigner --nologo ""${release_dir}native-bootstrap.exe"" ""${release_dir}CoApp.Rehash.x86.dll"" ""${release_dir}CoApp.Rehash.x64.dll"" ""${release_dir}CoApp.Resources.dll""  || goto failed
        
        REM copy signed files into binaries submodule
        xcopy /Q /D /Y  ""${release_dir}managed-bootstrap.exe"" ""${binaries_dir}"" || goto failed
        xcopy /Q /D /Y  ""${release_dir}native-bootstrap.exe"" ""${binaries_dir}"" || goto failed
        xcopy /Q /D /Y  ""${release_dir}CoApp.Rehash.x86.dll""  ""${binaries_dir}"" || goto failed
        xcopy /Q /D /Y  ""${release_dir}CoApp.Rehash.x64.dll""  ""${binaries_dir}"" || goto failed
        xcopy /Q /D /Y  ""${release_dir}CoApp.Resources.dll""  ""${binaries_dir}""  || goto failed

        REM Everything went ok!
        exit /b 0
        
        REM Something not ok :(
        :failed
        echo ERROR: Failure in script. aborting.
        exit /b 1
    ";
}

sign-binaries {
    set : release_dir = @"output\any\Release\bin\";
    set : binaries_dir = @"ext\binaries\";
    
    default: false;
    
    uses: {
        anycpu
    };
    
    targets: {
    };
    
    build-command: @"
        REM sign files in release directory
        ext\tools\simplesigner --nologo ""${release_dir}CoApp.Toolkit.dll"" ""${release_dir}CoApp.Toolkit.Engine.dll"" ""${release_dir}CoApp.Toolkit.Engine.Client.dll"" ""${release_dir}CoApp.Service.exe"" ""${release_dir}CoApp.Cleaner.exe"" ""${release_dir}CoApp.exe""
        
        REM copy signed files into binaries submodule
        xcopy /Q /D /Y  ""${release_dir}CoApp.Toolkit.dll"" ""${binaries_dir}"" || goto failed
        xcopy /Q /D /Y  ""${release_dir}CoApp.Toolkit.Engine.dll""  ""${binaries_dir}"" || goto failed
        xcopy /Q /D /Y  ""${release_dir}CoApp.Toolkit.Engine.Client.dll""  ""${binaries_dir}"" || goto failed
        xcopy /Q /D /Y  ""${release_dir}CoApp.Service.exe""  ""${binaries_dir}"" || goto failed 
        xcopy /Q /D /Y  ""${release_dir}CoApp.Cleaner.exe"" ""${binaries_dir}"" || goto failed 
        xcopy /Q /D /Y  ""${release_dir}CoApp.exe"" ""${binaries_dir}"" || goto failed

        REM Everything went ok!
        exit /b 0
        
        REM Something not ok :(
        :failed
        echo ERROR: Failure in script. aborting.
        exit /b 1
    ";
}

publish {
    set : release_dir = @"output\any\Release\bin\";
    set : binaries_dir = @"..\binaries\";
    set : tools_dir = @"..\tools\";
    set : submodule_binaries = @"ext\binaries\";
    
    default: false;
    uses: {
        sign
    };
    
    build-command: @"
        REM copy binaries into ..\binaries folder (this should be the one that is committed back when published)
        xcopy /Q /D /Y  ""${submodule_binaries}managed-bootstrap.exe"" ""${binaries_dir}"" || goto failed
        xcopy /Q /D /Y  ""${submodule_binaries}native-bootstrap.exe"" ""${binaries_dir}"" || goto failed
        xcopy /Q /D /Y  ""${submodule_binaries}CoApp.Rehash.x86.dll""  ""${binaries_dir}"" || goto failed
        xcopy /Q /D /Y  ""${submodule_binaries}CoApp.Rehash.x64.dll""  ""${binaries_dir}"" || goto failed
        xcopy /Q /D /Y  ""${submodule_binaries}CoApp.Resources.dll""  ""${binaries_dir}""  || goto failed
        xcopy /Q /D /Y  ""${submodule_binaries}CoApp.Toolkit.dll"" ""${binaries_dir}"" || goto failed
        xcopy /Q /D /Y  ""${submodule_binaries}CoApp.Toolkit.Engine.dll""  ""${binaries_dir}"" || goto failed
        xcopy /Q /D /Y  ""${submodule_binaries}CoApp.Toolkit.Engine.Client.dll""  ""${binaries_dir}"" || goto failed
        xcopy /Q /D /Y  ""${submodule_binaries}CoApp.Service.exe""  ""${binaries_dir}"" || goto failed 
        xcopy /Q /D /Y  ""${submodule_binaries}CoApp.Cleaner.exe"" ""${binaries_dir}"" || goto failed 
        xcopy /Q /D /Y  ""${submodule_binaries}CoApp.exe"" ""${binaries_dir}"" || goto failed

        rem TODO: package stuff too?
        rem 
        
        REM update version
        cscript //e:jscript scripts\increment-build-version.js
        
        REM Everything went ok!
        exit /b 0
        
        REM Something not ok :(
        :failed
        echo ERROR: Failure in script. aborting.
        exit /b 1
    ";
}

x86 {
    default: false;
    platform : x86;
    compiler: vc10;
    uses: clean;
    
    targets: { 
        @"output\any\${cfg}\bin\managed-bootstrap.exe",
        @"output\any\${cfg}\bin\native-bootstrap.exe",
        @"output\any\${cfg}\bin\CoApp.Rehash.x86.dll",
        @"output\any\${cfg}\bin\CoApp.Resources.dll",
    };

    build-command: @"
        msbuild  /p:Configuration=${cfg} ""/p:Platform=win32"" /p:SolutionDir=..\ rehash\CoApp.Rehash.x86.vcxproj  || goto failed
        msbuild  /p:Configuration=${cfg} ""/p:Platform=win32"" /p:SolutionDir=..\ native-bootstrap\bootstrap.vcxproj  || goto failed
        msbuild  /p:Configuration=${cfg} ""/p:Platform=AnyCPU"" /p:SolutionDir=..\ managed-bootstrap\managed-bootstrap.csproj  || goto failed
    
        REM Must build this one last, when done in release, it does the signing.
        msbuild  /p:Configuration=${cfg} ""/p:Platform=win32"" /p:SolutionDir=..\ resources\Resources.vcxproj  || goto failed
        
        REM Everything went ok!
        exit /b 0
        
        REM Something not ok :(
        :failed
        echo ERROR: Failure in script. aborting.
        exit /b 1
    ";
}

x64 {
    default: false;
    platform : x64;
    compiler: vc10;
    uses: clean;
    
    targets: { 
        @"output\any\${cfg}\bin\CoApp.Rehash.x64.dll",
    };

    build-command: @"
        msbuild  /p:Configuration=${cfg} ""/p:Platform=x64"" /p:SolutionDir=..\ rehash\CoApp.Rehash.x64.vcxproj || goto failed
        
        REM Everything went ok!
        exit /b 0
        
        REM Something not ok :(
        :failed
        echo ERROR: Failure in script. aborting.
        exit /b 1
    ";
}

anycpu {
    default: no;
    platform : x86;
    compiler: vc10;
    
    uses: clean;
    
    targets: { 
        @"output\any\${cfg}\bin\CoApp.Cleaner.exe",
        @"output\any\${cfg}\bin\CoApp.exe",
        @"output\any\${cfg}\bin\CoApp.Service.exe",
        @"output\any\${cfg}\bin\CoApp.Toolkit.dll",
        @"output\any\${cfg}\bin\CoApp.Toolkit.Engine.Client.dll",
        @"output\any\${cfg}\bin\CoApp.Toolkit.Engine.dll",

    };

    build-command: @"
        msbuild  /p:Configuration=${cfg} ""/p:Platform=Any CPU"" coapp.sln || goto failed
    
        REM Everything went ok!
        exit /b 0
        
        REM Something not ok :(
        :failed
        echo ERROR: Failure in script. aborting.
        exit /b 1
    ";
  
}

clean {
    default: no;
    
    clean-command: @"
        rmdir /s /q output intermediate  > nul 2>&1
        for /d %%v in (*) do if exist %%v\obj rmdir /s /q %%v\obj        
        for /d %%v in (*) do if exist %%v\bin rmdir /s /q %%v\bin
    ";
}