// Include js.js
with(new ActiveXObject("Scripting.FileSystemObject"))for(var x in p=(".;js;scripts;"+WScript.scriptfullname.replace(/(.*\\)(.*)/g,"$1")+";"+new ActiveXObject("WScript.Shell").Environment("PROCESS")("PATH")).split(";"))if(FileExists(j=BuildPath(p[x],"js.js"))){eval(OpenTextFile(j).ReadAll());break}
Use("CoApp");
var filename, rx, major, minor, build, revision;

/// Sign the binaries.
CoApp.StrongNameBinary([
        CoApp.$RELEASEDIR("trace.exe"),
        CoApp.$RELEASEDIR("trace-x86.exe"),
        CoApp.$RELEASEDIR("trace-x64.exe")]);


/// ---- Update Trace source files --------------------------------------------------------------------------------------------
filename = CoApp.GetRelativePath("\\..\\source\\CoApp.Trace.AssemblyStrongName.cs");
newTxt = CoApp.LoadTextFile(filename);

if( newTxt != null) {
    // signed version
    rx = /\[assembly: AssemblyVersion\("(.*)\.(.*)\.(.*)\.(.*)"\)\]/ig;
    rx.exec(newTxt);
    
    major = parseInt(RegExp.$1.Trim());
    minor = parseInt(RegExp.$2.Trim());
    build = parseInt(RegExp.$3.Trim());
    revision = parseInt(RegExp.$4.Trim())+1;

    if( major < 1 )
        throw  "FAILURE (1)";
    
    newTxt = newTxt.replace( /\[assembly: AssemblyVersion.*/ig , '[assembly: AssemblyVersion("'+major+'.'+minor+'.'+build+'.'+revision+'")]' );
    newTxt = newTxt.replace( /\[assembly: AssemblyFileVersion.*/ig , '[assembly: AssemblyFileVersion("'+major+'.'+minor+'.'+build+'.'+revision+'")]' );
   
    WScript.echo("Incrementing Version Attributes in "+filename);
    CoApp.SaveTextFile( filename, newTxt );
}

if (exists(filename = CoApp.GetRelativePath("\\..\\source\\CoApp.Trace.VersionInfo.h"))) {
    // overwrites completely.
    newTxt = '// This is an autogenerated file (see release-sign-trace.js)\r\n' + 
                '#define COAPP_TRACE_VERSION             '+major+','+minor+','+build+','+revision+'\r\n'+
                '#define COAPP_TRACE_VERSION_STR         "'+major+'.'+minor+'.'+build+'.'+revision+'\\0"\r\n';
    
    WScript.echo("Incrementing Version Attributes in "+filename);
    CoApp.SaveTextFile(filename, newTxt);
}

if (exists(filename = CoApp.GetRelativePath("\\..\\source\\CoApp.Trace.AssemblyStrongName.h"))) {
    // overwrites completely.
    newTxt = '// This is an autogenerated file (see release-sign-trace.js)\r\n' +
        '[assembly: System::Reflection::AssemblyVersion("' + major + '.' + minor + '.' + build + '.' + revision + '")]; \r\n' +
        '[assembly: System::Reflection::AssemblyFileVersion("' + major + '.' + minor + '.' + build + '.' + revision + '")]; \r\n';
    
    WScript.echo("Incrementing Version Attributes in "+filename);
    CoApp.SaveTextFile(filename, newTxt);
}